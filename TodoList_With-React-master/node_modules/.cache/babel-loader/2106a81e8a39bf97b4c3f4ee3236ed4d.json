{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Geraldo\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\project-react\\\\my-app\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport Title from './components/Title';\nimport TaskDetails from './components/TaskDetails';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: '1',\n    title: '',\n    completed: false\n  }]);\n  useEffect(() => {}, [tasks]);\n\n  const handleTaskClick = taskId => {\n    const newTasks = tasks.map(task => {\n      if (task.id === taskId) return { ...task,\n        completed: !task.completed\n      };\n      return task;\n    });\n    setTasks(newTasks);\n  };\n\n  const handleTaskAddition = taskTitle => {\n    const newTasks = [...tasks, {\n      title: taskTitle,\n      id: Math.random(10),\n      completed: false\n    }];\n    setTasks(newTasks);\n  };\n\n  const handleTaskDeletion = taskId => {\n    const newTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(newTasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        render: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(AddTask, {\n            handleTaskAddition: handleTaskAddition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n            tasks: tasks,\n            handleTaskClick: handleTaskClick,\n            handleTaskDeletion: handleTaskDeletion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/:taskTitle\",\n        exact: true,\n        component: TaskDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"HLoLgSR+7nEy2oqlr/xxl+ntgoY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Geraldo/OneDrive/Área de Trabalho/project-react/my-app/src/App.jsx"],"names":["React","useEffect","useState","axios","BrowserRouter","Router","Route","Tasks","AddTask","Title","TaskDetails","App","tasks","setTasks","id","title","completed","handleTaskClick","taskId","newTasks","map","task","handleTaskAddition","taskTitle","Math","random","handleTaskDeletion","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAO,WAAP;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,CACjC;AACEY,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,KAAK,EAAE,EAFT;AAGEC,IAAAA,SAAS,EAAE;AAHb,GADiC,CAAD,CAAlC;AAQAf,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACW,KAAD,CAFM,CAAT;;AAIA,QAAMK,eAAe,GAAIC,MAAD,IAAY;AAClC,UAAMC,QAAQ,GAAGP,KAAK,CAACQ,GAAN,CAAWC,IAAD,IAAU;AACnC,UAAIA,IAAI,CAACP,EAAL,KAAYI,MAAhB,EAAwB,OAAO,EAAE,GAAGG,IAAL;AAAWL,QAAAA,SAAS,EAAE,CAACK,IAAI,CAACL;AAA5B,OAAP;AAExB,aAAOK,IAAP;AACD,KAJgB,CAAjB;AAMAR,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACD,GARD;;AAUA,QAAMG,kBAAkB,GAAIC,SAAD,IAAe;AACxC,UAAMJ,QAAQ,GAAG,CACf,GAAGP,KADY,EAEf;AACEG,MAAAA,KAAK,EAAEQ,SADT;AAEET,MAAAA,EAAE,EAAEU,IAAI,CAACC,MAAL,CAAY,EAAZ,CAFN;AAGET,MAAAA,SAAS,EAAE;AAHb,KAFe,CAAjB;AASAH,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACD,GAXD;;AAaA,QAAMO,kBAAkB,GAAIR,MAAD,IAAY;AACrC,UAAMC,QAAQ,GAAGP,KAAK,CAACe,MAAN,CAAcN,IAAD,IAAUA,IAAI,CAACP,EAAL,KAAYI,MAAnC,CAAjB;AAEAL,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACD,GAJD;;AAMA,sBACE,QAAC,MAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,KAAK,MAFP;AAGE,QAAA,MAAM,EAAE,mBACN;AAAA,kCACE,QAAC,OAAD;AAAS,YAAA,kBAAkB,EAAEG;AAA7B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AACE,YAAA,KAAK,EAAEV,KADT;AAEE,YAAA,eAAe,EAAEK,eAFnB;AAGE,YAAA,kBAAkB,EAAES;AAHtB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cAFF,eAgBE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,KAAK,MAA/B;AAAgC,QAAA,SAAS,EAAEhB;AAA3C;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAhED;;GAAMC,G;;KAAAA,G;AAkEN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport Title from './components/Title';\nimport TaskDetails from './components/TaskDetails';\n\nimport './App.css';\n\nconst App = () => {\n  const [tasks, setTasks] = useState([\n    {\n      id: '1',\n      title: '',\n      completed: false,\n    },\n  ]);\n\n  useEffect(() => {\n\n  }, [tasks]);\n\n  const handleTaskClick = (taskId) => {\n    const newTasks = tasks.map((task) => {\n      if (task.id === taskId) return { ...task, completed: !task.completed }\n\n      return task;\n    });\n\n    setTasks(newTasks);\n  };\n\n  const handleTaskAddition = (taskTitle) => {\n    const newTasks = [\n      ...tasks,\n      {\n        title: taskTitle,\n        id: Math.random(10),\n        completed: false\n      },\n    ];\n\n    setTasks(newTasks);\n  }\n\n  const handleTaskDeletion = (taskId) => {\n    const newTasks = tasks.filter((task) => task.id !== taskId);\n\n    setTasks(newTasks);\n  }\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Title />\n        <Route\n          path='/'\n          exact\n          render={() => (\n            <>\n              <AddTask handleTaskAddition={handleTaskAddition} />\n              <Tasks\n                tasks={tasks}\n                handleTaskClick={handleTaskClick}\n                handleTaskDeletion={handleTaskDeletion}\n              />\n            </>\n          )}\n        />\n        <Route path='/:taskTitle' exact component={TaskDetails} />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}